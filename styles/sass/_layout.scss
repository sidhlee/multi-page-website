.page-wrapper {
	display: flex;
	flex-direction: column;
	justify-content: space-between;

	min-height: 100vh;
}

/* =========================
 *  Navigation
 * ======================== */

.navbar {
	padding: 1rem 0 0.25rem;

	.container {
		display: flex;
		align-items: center;
	}

	.nav-links {
		font-size: 1rem;
	}
}

.navbar.navbar-bg {
	background: var(--clr-navbar);
}

.link-text {
	display: inline-block;
}

.nav-links > li {
	position: relative;
	a:not(.active) {
		@include underline-after;
	}
}

.navbar .nav-links > li {
	a:not(.active):hover .link-text {
		@include fade-in-up;
	}
	// &:hover,
	// // Used focus-within on li for catching tab focus on anchor tag
	// // If you used :focus, li is not able to catch anchor tag focused by tabbing.
	// &:focus-within {
	// 	// @include underline-after-hover;
	// 	a:not(.active) {
	// 		@include underline-after;
	// 		// animation: fade-in-up 0.8s ease forwards;
	// 	}
	// }
}

// Appearing only on mobile & tablet
.nav-modal .nav-links {
	display: flex;
	flex-direction: column;

	li a {
		display: inline-block;
		position: relative;
		margin: 0.5em;
		padding: 0.5em;
		font-size: 1.5rem;
		color: var(--text-main);
		transition: all 250ms ease;

		&:not(.active) {
			@include underline-after;
		}

		// overriding mixin - need :not(.active) for specificity to be able to override
		&:not(.active)::after {
			background: var(--clr-primary);
			height: 3px;
		}

		// change active link color
		&.active {
			// use primary color instead of accent color on active link
			color: var(--clr-primary);
		}
	}

	@media (min-width: $desktop) {
		display: none;
	}
}

/* =========================
 *  Header
 * ======================== */

.hero {
	display: flex;
	align-items: flex-end;

	height: var(--hero-height);
	padding-bottom: 1em;
	background-size: cover;
}

/* =========================
 *  Main
 * ======================== */

/* =========================
 *  Footer
 * ======================== */

.footer {
	padding: 0.25em 0;
	background: var(--text-main);
	text-align: center;
	color: var(--text-inverse);
}
