/* =========================
 *  Variables & Custom Properties
 * ======================== */

// Breakpoints
$desktop: 1000px;
$mw: 1600px;

:root {
	/* Colors */
	--clr-primary: #0e902d;
	--clr-accent: #f8e71c;
	--clr-white: #ffffff;
	--text-main: #2c2c2c;
	--text-secondary: #074115;
	--text-inverse: var(--clr-white);

	--bg-primary: #f0efed;
	--bg-secondary: var(--clr-white);
	--clr-navbar: rgb(20, 20, 20);

	/* Typography */
	--ff-body: Roboto;
	--ff-heading: 'Josefin Sans';
	--ff-body: Roboto;
	--ff-heading: 'Josefin Sans';

	/* Spacing */
	// horizontal padding inside container
	--px-xs: Min(Max(0.5rem, 4vw), 1em);
	--px: Min(Max(1rem, 7vw), 5rem);
	// vertical padding inside container
	--py: Min(Max(3rem, 10vw), 5rem);
	--hero-height: Min(Max(15rem, 38vw), 20rem);
	--hero-main-height: Min(Max(15rem, 45vw), 40rem);
	--form-border: 1px solid var(--clr-primary);

	--z-menu-btn: 1000;
	--z-menu-modal: 500;
	--z-shadow: 199;
	--z-shadow-overlay: 200;
	--z-card: 300;

	--shadow-offset: 1rem;
}

/* =========================
 *  Mixins
 * ======================== */
@mixin text-style(
	$ff: var(--ff-heading),
	$fz: 1rem,
	$fw: regular,
	$lh: 1.6,
	$ls: 0px,
	$color: var(--text-main)
) {
	font-family: $ff;
	font-size: $fz;
	font-weight: $fw;
	line-height: $lh;
	letter-spacing: $ls;
	color: $color;
}

/* =========================
 *  Utils
 * ======================== */

.sr-only:not(:focus):not(:active) {
	position: absolute;
	width: 1px;
	height: 1px;
	margin: -1px;
	border: 0;
	padding: 0;
	white-space: nowrap;
	clip-path: inset(100%);
	clip: rect(00 0 0);
	overflow: hidden;
}

.clearfix:after {
	visibility: hidden;
	display: block;
	font-size: 0;
	content: '';
	clear: both;
	height: 0;
}

.accent {
	color: var(--clr-accent);
}
.bg-secondary {
	background-color: var(--bg-secondary);
}

.active {
	color: var(--clr-accent);
}

.container {
	width: 100%;
	max-width: $mw;
	margin: 0 auto;
	padding-left: var(--px);
	padding-right: var(--px);
}

.center {
	text-align: center;
	margin-left: auto;
	margin-right: auto;
}

.shadow {
	// transform: translateY(-5%);
	position: relative;
	& * {
		position: relative;
		z-index: var(--z-shadow-overlay);
	}

	&::after {
		content: '';
		display: block;
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: var(--clr-accent);
		transform: translate(var(--shadow-offset), var(--shadow-offset));
		z-index: var(--z-shadow);
	}

	&.shadow-left {
		transform: translate(1rem, 0);
		&::after {
			transform: translate(
				calc(-1 * var(--shadow-offset)),
				var(--shadow-offset)
			);
		}
	}

	// &::before + * {
	// 	position: relative;
	// 	z-index: 1000;
	// }
}
